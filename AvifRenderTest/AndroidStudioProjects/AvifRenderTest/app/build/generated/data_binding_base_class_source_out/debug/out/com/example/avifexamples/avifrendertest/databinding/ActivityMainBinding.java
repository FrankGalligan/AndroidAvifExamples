// Generated by view binder compiler. Do not edit!
package com.example.avifexamples.avifrendertest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RadioButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.avifexamples.avifrendertest.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonStart;

  @NonNull
  public final RadioButton decoderAom;

  @NonNull
  public final RadioButton decoderDav1d;

  @NonNull
  public final RadioButton decoderGav1;

  @NonNull
  public final RadioButton decoderPlatformAvif;

  @NonNull
  public final TextView filename;

  @NonNull
  public final ListView imageList;

  @NonNull
  public final RadioButton libyuvNo;

  @NonNull
  public final RadioButton libyuvThreaded;

  @NonNull
  public final RadioButton libyuvYes;

  @NonNull
  public final EditText loopCount;

  @NonNull
  public final TextView notice;

  @NonNull
  public final EditText sleepSeconds;

  @NonNull
  public final EditText threadCount;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull Button buttonStart,
      @NonNull RadioButton decoderAom, @NonNull RadioButton decoderDav1d,
      @NonNull RadioButton decoderGav1, @NonNull RadioButton decoderPlatformAvif,
      @NonNull TextView filename, @NonNull ListView imageList, @NonNull RadioButton libyuvNo,
      @NonNull RadioButton libyuvThreaded, @NonNull RadioButton libyuvYes,
      @NonNull EditText loopCount, @NonNull TextView notice, @NonNull EditText sleepSeconds,
      @NonNull EditText threadCount) {
    this.rootView = rootView;
    this.buttonStart = buttonStart;
    this.decoderAom = decoderAom;
    this.decoderDav1d = decoderDav1d;
    this.decoderGav1 = decoderGav1;
    this.decoderPlatformAvif = decoderPlatformAvif;
    this.filename = filename;
    this.imageList = imageList;
    this.libyuvNo = libyuvNo;
    this.libyuvThreaded = libyuvThreaded;
    this.libyuvYes = libyuvYes;
    this.loopCount = loopCount;
    this.notice = notice;
    this.sleepSeconds = sleepSeconds;
    this.threadCount = threadCount;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_start;
      Button buttonStart = ViewBindings.findChildViewById(rootView, id);
      if (buttonStart == null) {
        break missingId;
      }

      id = R.id.decoder_aom;
      RadioButton decoderAom = ViewBindings.findChildViewById(rootView, id);
      if (decoderAom == null) {
        break missingId;
      }

      id = R.id.decoder_dav1d;
      RadioButton decoderDav1d = ViewBindings.findChildViewById(rootView, id);
      if (decoderDav1d == null) {
        break missingId;
      }

      id = R.id.decoder_gav1;
      RadioButton decoderGav1 = ViewBindings.findChildViewById(rootView, id);
      if (decoderGav1 == null) {
        break missingId;
      }

      id = R.id.decoder_platform_avif;
      RadioButton decoderPlatformAvif = ViewBindings.findChildViewById(rootView, id);
      if (decoderPlatformAvif == null) {
        break missingId;
      }

      id = R.id.filename;
      TextView filename = ViewBindings.findChildViewById(rootView, id);
      if (filename == null) {
        break missingId;
      }

      id = R.id.image_list;
      ListView imageList = ViewBindings.findChildViewById(rootView, id);
      if (imageList == null) {
        break missingId;
      }

      id = R.id.libyuv_no;
      RadioButton libyuvNo = ViewBindings.findChildViewById(rootView, id);
      if (libyuvNo == null) {
        break missingId;
      }

      id = R.id.libyuv_threaded;
      RadioButton libyuvThreaded = ViewBindings.findChildViewById(rootView, id);
      if (libyuvThreaded == null) {
        break missingId;
      }

      id = R.id.libyuv_yes;
      RadioButton libyuvYes = ViewBindings.findChildViewById(rootView, id);
      if (libyuvYes == null) {
        break missingId;
      }

      id = R.id.loop_count;
      EditText loopCount = ViewBindings.findChildViewById(rootView, id);
      if (loopCount == null) {
        break missingId;
      }

      id = R.id.notice;
      TextView notice = ViewBindings.findChildViewById(rootView, id);
      if (notice == null) {
        break missingId;
      }

      id = R.id.sleep_seconds;
      EditText sleepSeconds = ViewBindings.findChildViewById(rootView, id);
      if (sleepSeconds == null) {
        break missingId;
      }

      id = R.id.thread_count;
      EditText threadCount = ViewBindings.findChildViewById(rootView, id);
      if (threadCount == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, buttonStart, decoderAom, decoderDav1d,
          decoderGav1, decoderPlatformAvif, filename, imageList, libyuvNo, libyuvThreaded,
          libyuvYes, loopCount, notice, sleepSeconds, threadCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
